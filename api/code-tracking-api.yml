openapi: 3.1.0
info:
  title: Cursor AI Code Tracking API
  version: "0.1"
servers:
  - url: https://api.cursor.com
security:
  - basicAuth: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    startDate:
      name: startDate
      in: query
      required: false
      description: ISO date string, "now", or relative like "7d"
      schema: { type: string }
    endDate:
      name: endDate
      in: query
      required: false
      description: ISO date string, "now", or relative like "0d"
      schema: { type: string }
    page:
      name: page
      in: query
      required: false
      schema: { type: integer, minimum: 1, default: 1 }
    pageSize:
      name: pageSize
      in: query
      required: false
      schema: { type: integer, minimum: 1, default: 100, maximum: 1000 }
    user:
      name: user
      in: query
      required: false
      description: Filter to a single user by email, encoded ID (e.g., user_abc123â€¦), or numeric ID.
      schema: { type: string }
  schemas:
    AiCommitMetric:
      type: object
      properties:
        commitHash: { type: string }
        userId: { type: string, description: "Encoded external ID, e.g. user_abc123" }
        userEmail: { type: string, format: email }
        repoName: { type: string, nullable: true }
        branchName: { type: string, nullable: true }
        isPrimaryBranch: { type: boolean, nullable: true }
        totalLinesAdded: { type: number }
        totalLinesDeleted: { type: number }
        tabLinesAdded: { type: number }
        tabLinesDeleted: { type: number }
        composerLinesAdded: { type: number }
        composerLinesDeleted: { type: number }
        nonAiLinesAdded: { type: number, nullable: true }
        nonAiLinesDeleted: { type: number, nullable: true }
        message: { type: string, nullable: true }
        commitTs: { type: string, format: date-time, nullable: true }
        createdAt: { type: string, format: date-time }
      required: [commitHash, userId, createdAt]
    PaginatedCommitResponse:
      type: object
      properties:
        items:
          type: array
          items: { $ref: '#/components/schemas/AiCommitMetric' }
        totalCount: { type: integer }
        page: { type: integer }
        pageSize: { type: integer }
      required: [items, totalCount, page, pageSize]
    AiCodeChangeMetric:
      type: object
      properties:
        changeId: { type: string }
        userId: { type: string }
        userEmail: { type: string, format: email }
        source: { type: string, enum: [TAB, COMPOSER] }
        model: { type: string, nullable: true }
        totalLinesAdded: { type: number }
        totalLinesDeleted: { type: number }
        createdAt: { type: string, format: date-time }
      required: [changeId, userId, userEmail, source, totalLinesAdded, totalLinesDeleted, createdAt]
    PaginatedChangeResponse:
      type: object
      properties:
        items:
          type: array
          items: { $ref: '#/components/schemas/AiCodeChangeMetric' }
        totalCount: { type: integer }
        page: { type: integer }
        pageSize: { type: integer }
      required: [items, totalCount, page, pageSize]
paths:
  /analytics/ai-code/commits:
    get:
      operationId: listAiCommitMetrics
      summary: Get AI commit metrics (paginated)
      description: Rate limit ~5 requests/min per team per endpoint.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/user'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PaginatedCommitResponse' }
  /analytics/ai-code/commits.csv:
    get:
      operationId: downloadAiCommitMetricsCsv
      summary: Download AI commit metrics (CSV)
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/user'
      responses:
        "200":
          description: CSV stream
          content:
            text/csv:
              schema: { type: string, format: binary }
  /analytics/ai-code/changes:
    get:
      operationId: listAiCodeChangeMetrics
      summary: Get AI code change metrics (paginated)
      description: Rate limit ~5 requests/min per team per endpoint.
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/user'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/PaginatedChangeResponse' }
  /analytics/ai-code/changes.csv:
    get:
      operationId: downloadAiCodeChangeMetricsCsv
      summary: Download AI code change metrics (CSV)
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/user'
      responses:
        "200":
          description: CSV stream
          content:
            text/csv:
              schema: { type: string, format: binary }
